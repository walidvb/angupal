// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('myApp').directive('swiperCtrl', function() {
    var mySwiper, obj;

    mySwiper = null;
    obj = {
      priority: 1000,
      controller: function($scope, $attrs, $timeout) {
        console.log($scope);
        console.log($attrs);
        this.ready = function() {
          var $this, options, pagination;

          $this = $attrs.$$element;
          options = {
            mousewheelControl: true,
            mousewheelControlForceToAxis: true,
            keyboardControl: true,
            resizeReInit: true,
            grabCursor: true,
            longSwipesRatio: 0.1
          };
          if ($attrs.swiperCtrl === 'vert') {
            pagination = $('<div class="vert-pagination"/>');
            $scope.swipers.vertPagination = pagination;
            angular.element('.pagination-wrapper').prepend(pagination);
            options.slideClass = 'slide-vert';
            options.mode = 'vertical';
            options.pagination = '.vert-pagination';
            options.paginationElement = 'div';
            options.paginationElementClass = 'vert-pager';
            options.paginationActiveClass = 'active';
            options.paginationVisibleClass = 'visible';
            options.paginationClickable = true;
            options.initialSlide = 0;
            options.onSwiperCreated = function(swiper) {
              angular.element('.vert-pagination').css('marginTop', -pagination.height() / 2);
              return $scope.initPagers();
            };
            options.onSlideChangeStart = function(swiper, direction) {
              angular.element('body').removeClass('initial-state');
              return pagination.removeClass('faded');
            };
            options.onSlideChangeEnd = function(swiper, direction) {
              var initialState;

              if (initialState) {
                swiper.removeSlide(0);
                swiper.swipeTo(0, 0, false);
                angular.element('body').addClass('ready-state');
                initialState = false;
                return $scope.initPagers();
              }
            };
            return mySwiper = $this.swiper(options);
          } else {
            options.slideClass = 'slide-horz';
            options.onSlideClicka = function(swiper) {
              return swiper.swipeNext();
            };
            options.aonSlideToucha = function(swiper) {
              return swiper.swipeNext();
            };
            options.aonSlideChangeStart = function(swiper, direction) {
              return console.log('horizontal change ', swiper);
            };
            options.loop = true;
            if ($attrs.id === 'bio' && window.innerWidth > 767) {
              options.slidesPerView = 2;
            }
            return $timeout(function() {
              mySwiper = $this.swiper(options);
              return console.log('swiper horz instantiated');
            });
          }
        };
        return this;
      }
    };
    return obj;
  }).directive('swiperSlide', function() {
    var dirobj;

    dirobj = {
      require: '^swiperCtrl',
      compile: function() {
        return {
          post: function(scope, elem, attrs, swiperCtrl) {
            console.log(scope);
            if (scope.$last || attrs.swiperSlide === 'last') {
              return swiperCtrl.ready();
            }
          }
        };
      }
    };
    return dirobj;
  });

}).call(this);
