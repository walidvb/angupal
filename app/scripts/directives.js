// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('myApp').filter('notFirst', function() {
    return function(input) {
      var array, i;

      if (input && input !== "undefined") {
        array = new Array();
        i = 1;
        while (i < input.length) {
          array.push(input[i++]);
        }
        return array;
      }
    };
  }).filter('first', function() {
    return function(input) {
      if (input && input !== "undefined") {
        return input[0];
      }
    };
  }).directive("myProject", [
    function() {
      return {
        scope: {
          project: "=myProject"
        },
        templateUrl: "views/project.html",
        replace: true
      };
    }
  ]).directive('myMultipage', [
    '$timeout', function($timeout) {
      return {
        priority: 300,
        controller: function($scope) {
          var goTo;

          $scope.next = function() {
            return goTo('next');
          };
          $scope.prev = function() {
            return goTo('prev');
          };
          return goTo = function(direction) {
            var h, newOffset, page;

            h = $scope.page.height();
            console.log('page', $scope.page);
            newOffset = direction === 'next' ? $scope.pageOffset - h : $scope.pageOffset + h;
            newOffset += 10;
            page = $scope.page.find('.html-content');
            console.log('newOffset', newOffset, 'h', h, 'page.height', page.height());
            if (newOffset > 0) {
              newOffset = 0;
              return;
            }
            if (-newOffset > page.height()) {
              newOffset = $scope.pageOffset;
              return;
            }
            page.animate({
              'opacity': 0
            }, 'ease-out', function() {
              $(this).css({
                '-webkit-transform': 'translateY(' + newOffset + 'px)',
                '-moz-transform': 'translateY(' + newOffset + 'px)',
                'transform': 'translateY(' + newOffset + 'px)'
              });
              return page.stop().animate({
                'opacity': 1
              }, 'ease-out');
            });
            $scope.pageOffset = newOffset;
            return $scope.pageIndex = direction === 'next' ? $scope.pageIndex++ : $scope.pageIndex--;
          };
        },
        link: function(scope, elm, attrs) {
          var controls, next, prev;

          scope.page = angular.element(elm);
          if (scope.page.height() <= scope.page.find('.html-content').height()) {
            scope.pageIndex = null;
            return;
          }
          prev = angular.element('<div class="control prev"/>').html('&uarr;');
          next = angular.element('<div class="control next"/>').html('&darr;');
          controls = angular.element('<div class="page-controls">').append(prev).append(next);
          angular.element(elm).append(controls);
          next.bind('click', function() {
            console.log('clicked next');
            return scope.next();
          });
          prev.bind('click', function() {
            console.log('clicked prev');
            return scope.prev();
          });
          scope.controls = {
            prev: prev,
            next: next
          };
          scope.pageOffset = 0;
          return scope.pageIndex = 0;
        }
      };
    }
  ]).directive("myInfo", [
    function() {
      return {
        transclude: false,
        scope: {
          info: "=myInfo"
        },
        templateUrl: "views/info.html",
        link: function(scope, elem, attrs) {
          return console.log(scope, elem, attrs);
        }
      };
    }
  ]).directive("myBio", [
    function() {
      return {
        scope: {
          bio: "=myBio"
        },
        templateUrl: "views/bio.html",
        replace: false
      };
    }
  ]);

}).call(this);
