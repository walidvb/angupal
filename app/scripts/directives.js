// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('myApp').directive("myProject", [
    function() {
      return {
        scope: {
          project: "=myProject"
        },
        replace: true,
        templateUrl: "views/project.html"
      };
    }
  ]).directive("myBio", [
    function() {
      return {
        scope: {
          bio: "=myBio"
        },
        templateUrl: "views/bio.html"
      };
    }
  ]).directive("swiper", [
    '$timeout', function($timeout) {
      return {
        controller: function($scope) {
          return $scope.horizontal = new Array;
        },
        transclude: false,
        priority: 500,
        link: function(scope, elem, attrs) {
          return $timeout(function() {
            var $this, options, pagination;

            $this = angular.element(elem);
            options = {
              mousewheelControl: true,
              mousewheelControlForceToAxis: true,
              keyboardControl: true,
              resizeReInit: true,
              grabCursor: true
            };
            if (attrs.swiper === 'vert') {
              pagination = angular.element('<div class="vert-pagination"/>');
              $this.append(pagination);
              options.slideClass = 'slide-vert';
              options.mode = 'vertical';
              options.pagination = '.vert-pagination';
              options.paginationElement = 'div';
              options.paginationElementClass = 'vert-pager';
              options.paginationActiveClass = 'active';
              options.paginationVisibleClass = 'visible';
              options.paginationClickable = true;
              options.onSwiperCreated = function(swiper) {
                var info;

                info = angular.element('#info');
                pagination.append(info);
                return pagination.css('marginTop', -pagination.height() / 2);
              };
              options.onSlideChangeStart = function(swiper, direction) {
                return angular.element('body').removeClass('initial-state');
              };
              options.onSlideChangeEnd = function(swiper, direction) {
                swiper.removeSlide(0);
                swiper.swipeTo(0, 0, false);
                swiper.removeCallbacks('SlideChangeEnd');
                return angular.element('body').addClass('normal-state');
              };
              scope.vertical = $this.swiper(options);
              return;
            } else {
              options.slideClass = 'slide-horz';
            }
            if (attrs.settings === 'bio') {
              options.scrollContainer = true;
            }
            return scope.horizontal.push($this.swiper(options));
          }, 1000);
        }
      };
    }
  ]);

}).call(this);
