// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';  angular.module('myApp').filter('first', function(input) {
    console.log(input);
    return 'hello';
  }).filter('exceptFirst', function(input) {
    console.log(input);
    return 'hi';
  }).controller('mainCtrl', function($scope, $timeout) {
    $scope.toggleInfo = function(toOpen) {
      if (toOpen == null) {
        toOpen = null;
      }
      return $scope.infoOpen = toOpen || !$scope.infoOpen;
    };
    $scope.toggleNav = function(toOpen) {
      if (toOpen == null) {
        toOpen = null;
      }
      return $scope.navOpen = toOpen || !$scope.navOpen;
    };
    $scope.swipers = {
      vertical: null,
      horz: new Array
    };
    $scope.data = {};
    $scope.initPagers = function() {
      return $timeout(function() {
        var classes, i, item, pager, pagers, pagination, slideIcons, slideNames, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _results;

        slideNames = new Array;
        _ref = $scope.swipers.vertical.slides;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          pager = _ref[_i];
          slideNames.push(pager.attributes['data-name'].value);
        }
        slideIcons = new Array;
        _ref1 = $scope.swipers.vertical.slides;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          pager = _ref1[_j];
          slideIcons.push(pager.attributes['data-icon'].value);
        }
        pagination = angular.element('.vert-pagination');
        pagers = pagination.find('div.vert-pager');
        _results = [];
        for (i = _k = 0, _len2 = pagers.length; _k < _len2; i = ++_k) {
          item = pagers[i];
          classes = angular.element(item).attr('class') + ' vert-pager';
          _results.push($(item).attr('data-title', slideNames[i]).css({
            'background-image': 'url("' + slideIcons[i] + '")'
          }));
        }
        return _results;
      }, 1000);
    };
    Mousetrap.bind('i', function() {
      $scope.toggleInfo();
      return $scope.$digest();
    });
    Mousetrap.bind('m', function() {
      $scope.toggleNav();
      return $scope.$digest();
    });
    return window.onresize = function() {
      console.log($scope);
      return $scope.digest;
    };
  }).controller('officeCtrl', [
    '$scope', 'officeService', function($scope, service) {
      $scope.data = $scope.data || {};
      service.getBlaise().then(function(data) {
        return $scope.data.blaise = data.data;
      });
      return service.getDidier().then(function(data) {
        return $scope.data.didier = data.data;
      });
    }
  ]).controller('projectCtrl', [
    '$scope', 'projectService', function($scope, service) {
      $scope.data = $scope.data || {};
      service.getProjects().then(function(data) {
        return $scope.data.projects = data.data.nodes;
      });
      return service.getMasai().then(function(data) {
        return $scope.data.masai = data.data.nodes[0].node;
      });
    }
  ]).controller('infoCtrl', [
    '$scope', 'nodeService', function($scope, service) {
      $scope.data = $scope.data || {};
      return service.getNode(5).then(function(data) {
        return $scope.data.info = data.data;
      });
    }
  ]);

}).call(this);
