// Generated by CoffeeScript 1.6.2
(function() {
  'use strict';  angular.module('myApp').controller('mainCtrl', function($scope, $timeout, nodeService) {
    $scope.data = $scope.data || {};
    nodeService.getProjects().then(function(data) {
      return $scope.data.projects = data.data.nodes;
    });
    nodeService.getNode(4).then(function(data) {
      return $scope.data.masai = data.data.nodes[0].node;
    });
    $scope.toggleInfo = function(toOpen) {
      if (toOpen == null) {
        toOpen = null;
      }
      $scope.infoOpen = toOpen || !$scope.infoOpen;
      return console.log('togglingInfo to ', $scope.infoOpen, ' requested ', toOpen);
    };
    $scope.toggleNav = function(toOpen) {
      if (toOpen == null) {
        toOpen = null;
      }
      return $scope.navOpen = toOpen || !$scope.navOpen;
    };
    $scope.swipers = {
      vertical: null,
      horz: new Array
    };
    $scope.data = {};
    $scope.initPagers = function() {
      return;
      return $timeout(function() {
        var $item, i, icon, item, pager, pagers, pagination, slideIcons, slideNames, title, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _results;

        slideNames = new Array;
        _ref = $scope.swipers.vertical.slides;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          pager = _ref[_i];
          slideNames.push(pager.attributes['data-name'].value);
        }
        slideIcons = new Array;
        _ref1 = $scope.swipers.vertical.slides;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          pager = _ref1[_j];
          slideIcons.push(pager.attributes['data-icon'].value);
        }
        pagination = angular.element('.vert-pagination');
        pagers = pagination.find('div.vert-pager');
        _results = [];
        for (i = _k = 0, _len2 = pagers.length; _k < _len2; i = ++_k) {
          item = pagers[i];
          title = icon = angular.element('<img class="icon" src="' + slideIcons[i] + '"/>');
          $item = angular.element(item);
          icon.item = $item;
          console.log(icon);
          $item.attr('data-title', slideNames[i]).append(icon);
          _results.push(icon.bind('click', function() {
            console.log(this);
            return this.item.click();
          }));
        }
        return _results;
      }, 0);
    };
    Mousetrap.bind('i', function() {
      $scope.toggleInfo();
      return $scope.$digest();
    });
    Mousetrap.bind('m', function() {
      $scope.toggleNav();
      return $scope.$digest();
    });
    Mousetrap.bind('esc', function() {
      $scope.toggleInfo();
      $scope.toggleNav(false);
      return $scope.$digest();
    });
    return window.onresize = function() {
      return $scope.digest;
    };
  }).controller('officeCtrl', [
    '$scope', 'nodeService', function($scope, service) {
      $scope.data.bios = new Array;
      service.getNode(1).then(function(data) {
        return $scope.data.bios.push(data.data.nodes[0].node);
      });
      return service.getNode(2).then(function(data) {
        return $scope.data.bios.push(data.data.nodes[0].node);
      });
    }
  ]).controller('infoCtrl', [
    '$scope', 'nodeService', function($scope, service) {
      return service.getNode(5).then(function(data) {
        return $scope.data.info = data.data.nodes[0].node;
      });
    }
  ]);

}).call(this);
