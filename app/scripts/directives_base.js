// Generated by CoffeeScript 1.6.2
(function() {
  angular.module('myApp').directive('drupalEdit', [
    'drupal', function(backend) {
      if (!backend.user && !true) {
        return {
          replace: true,
          template: '<span>no edit</span>'
        };
      } else {
        return {
          scope: {
            nid: "=drupalEdit"
          },
          replace: true,
          template: '<a class="edit" ng-href="' + base_path + 'node/{{nid}}/edit" target="_blank"><span class="glyphicon glyphicon-edit" data-toggle="tooltip" data-title="Edit"></span></a>',
          link: function(scope, elem, attrs) {
            return elem[0].parentNode.classList.add('editable');
          }
        };
      }
    }
  ]).directive("myHtml", [
    "$timeout", "$sce", function(timer, $sce) {
      return {
        scope: {
          myHtml: "="
        },
        replace: false,
        priority: 1000,
        template: "<span ng-bind-html='trustMe(myHtml)' class='html-content'></span>",
        controller: function($scope, $element) {
          $scope.trustMe = function(html) {
            return $sce.trustAsHtml(html);
          };
        }
      };
    }
  ]).directive("myaFullscreen", [
    "$timeout", "$window", function(timer, $window) {
      return function(scope, elem, attrs) {
        var setSize;

        setSize = function() {
          var menu_height;

          menu_height = (attrs.myFullscreen ? 0 : angular.element("#menu").height());
          if (attrs.myFullscreen === 'y') {
            return angular.element(elem).css({
              height: $window.innerHeight,
              overflowY: 'hidden'
            });
          } else {
            return angular.element(elem).width(angular.element('.container').innerWidth);
          }
        };
        angular.element($window).bind("resize", function() {
          return setSize();
        });
        return timer(setSize, 0);
      };
    }
  ]);

}).call(this);
